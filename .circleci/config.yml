# Checkout Workspace
attach_workspace: &attach_workspace
  attach_workspace:
    at: .


# Build environments
deploy_environment: &deploy_environment
  working_directory: ~/repo
  machine: true

test_environment: &test_environment
  working_directory: ~/repo
  docker:
    - image: circleci/node:13.0-browsers


# Requirement groups
deps: &deps
  - "Dependencies"
deps_and_lint_and_test: &deps_and_lint_and_test
  - "Dependencies"
  - "Lint"
  - "Test"
test: &test
  - "Test"
lint_and_test: &lint_and_test
  - "Lint"
  - "Test"
deps_and_build: &deps_and_build
  - "Dependencies"
  - "Build"


version: 2.1 # use CircleCI version 2.1
orbs:
  codecov: codecov/codecov@1.0.5
workflows:
  version: 2
  master:
    jobs:
      - "Dependencies"
      - "Deploy":
          requires: *deps_and_build
      - "Lint":
          requires: *deps
      - "Test":
          requires: *deps
      - "Coverage":
          requires: *test
      - "Generate Reports":
          requires: *lint_and_test
      - "Build":
          requires: *deps_and_lint_and_test

jobs:
  "Deploy":
    <<: *deploy_environment
    steps:
      - checkout
      - run:
          name: Netlify Deploy
          command: curl -X POST -d {} ${netlify_build_url}

  "Dependencies":
    <<: *test_environment
    steps:
      - checkout
      - *attach_workspace
      # Download and cache dependencies
      - restore_cache:
          name: Restore Yarn Package Cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          keys:
            # key template
            # embeds the current branch name using {{ .Branch }}
            # embeds "yarn.lock" into the key templace via {{ checksum "yarn.lock" }}
            - yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-
      - run:
          name: Install Dependencies
          command: yarn install --ignore-engines
      - run:
          name: Create Test Reports Folder
          command: mkdir junit-reports
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn # cache path
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - junit-reports

  "Lint":
    <<: *test_environment
    steps:
      - checkout
      - *attach_workspace
      - run:
          name: Run Lint + Autofix
          command: yarn run ci:lint
      - persist_to_workspace:
          root: .
          paths:
            - junit-reports

  "Test":
    <<: *test_environment
    steps:
      - checkout
      - *attach_workspace
      - run:
          name: Run Test + Coverage
          command: yarn run ci:test
      - store_test_results:
          path: src/__snapshots__/
      - persist_to_workspace:
          root: .
          paths:
            - coverage
            - junit-reports

  "Coverage":
    <<: *test_environment
    steps:
      - checkout
      - *attach_workspace
      - store_artifacts:
          path: coverage/
          destination: coverage
      - codecov/upload:
          file: coverage/coverage-final.json
          token: ${codecov_token}

  "Generate Reports":
    <<: *test_environment
    steps:
      - checkout
      - *attach_workspace
      - store_artifacts:
          path: junit-reports/
          destination: junit-reports
      - store_test_results:
          path: junit-reports/

  "Build":
    <<: *test_environment
    steps:
      - checkout
      - *attach_workspace
      - run:
          name: Build Gorg UI
          command: yarn run ci:build
      # upload the build folder as an artifact
      - store_artifacts:
          path: public/
          destination: public
      - persist_to_workspace:
          root: .
          paths:
            - public